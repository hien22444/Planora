<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="page-title mb-4">
                <i class="fas fa-chart-line me-2"></i>Báo cáo & Thống kê
            </h2>
        </div>
    </div>

    <!-- Thẻ thống kê -->
    <div class="row mb-4">
        <!-- Doanh thu tháng này -->
        <div class="col-md-4">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Doanh thu tháng này</h5>
                    <h2 class="display-4 mb-3">
                        <%= (revenueComparison.thisMonth.total || 0).toLocaleString() %> ₫
                    </h2>
                    <p class="mb-0">
                        <% 
                        let revenueChange = 0;
                        let showComparison = true;
                        
                        const thisMonthTotal = revenueComparison.thisMonth.total || 0;
                        const lastMonthTotal = revenueComparison.lastMonth.total || 0;

                        if (lastMonthTotal === 0 && thisMonthTotal === 0) {
                            showComparison = false;
                        } else if (lastMonthTotal === 0 && thisMonthTotal > 0) {
                            revenueChange = 100;
                        } else if (lastMonthTotal > 0) {
                            revenueChange = ((thisMonthTotal - lastMonthTotal) / lastMonthTotal * 100).toFixed(1);
                        }
                        %>
                        <% if (showComparison) { %>
                            <span class="<%= revenueChange >= 0 ? 'text-success' : 'text-danger' %>">
                                <i class="fas <%= revenueChange >= 0 ? 'fa-arrow-up' : 'fa-arrow-down' %>"></i>
                                <%= Math.abs(revenueChange) %>%
                            </span>
                            so với tháng trước
                        <% } else { %>
                            <span class="text-muted"> </span>
                        <% } %>
                    </p>
                </div>
            </div>
        </div>

        <!-- Số đơn hàng -->
        <div class="col-md-4">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Đơn hàng tháng này</h5>
                    <h2 class="display-4 mb-3"><%= (revenueComparison.thisMonth.count || 0) %></h2>
                    <p class="mb-0">
                        <% 
                        let orderChange = 0;
                        let showOrderComparison = true;
                        
                        const thisMonthCount = revenueComparison.thisMonth.count || 0;
                        const lastMonthCount = revenueComparison.lastMonth.count || 0;

                        if (lastMonthCount === 0 && thisMonthCount === 0) {
                            showOrderComparison = false;
                        } else if (lastMonthCount === 0 && thisMonthCount > 0) {
                            orderChange = 100;
                        } else if (lastMonthCount > 0) {
                            orderChange = ((thisMonthCount - lastMonthCount) / lastMonthCount * 100).toFixed(1);
                        }
                        %>
                        <% if (showOrderComparison) { %>
                            <span class="<%= orderChange >= 0 ? 'text-light' : 'text-danger' %>">
                                <i class="fas <%= orderChange >= 0 ? 'fa-arrow-up' : 'fa-arrow-down' %>"></i>
                                <%= Math.abs(orderChange) %>%
                            </span>
                            so với tháng trước
                        <% } else { %>
                            <span class="text-muted"> </span>
                        <% } %>
                    </p>
                </div>
            </div>
        </div>

        <!-- Người dùng -->
        <div class="col-md-4">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Người dùng mới tháng này</h5>
                    <h2 class="display-4 mb-3"><%= userMetrics.newUsers %></h2>
                    <p class="mb-0">
                        <span class="badge bg-light text-dark me-2">
                            <%= Math.round(userMetrics.activeUsers/userMetrics.totalUsers*100) %>% hoạt động
                        </span>
                        Tổng số: <%= userMetrics.totalUsers %> người dùng
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu đồ doanh thu và đơn hàng -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Doanh thu và đơn hàng 6 tháng gần nhất</h5>
                    <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-outline-secondary" id="viewRevenue">Doanh thu</button>
                        <button type="button" class="btn btn-sm btn-outline-secondary" id="viewOrders">Đơn hàng</button>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="revenueChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="card-title mb-0">Trạng thái đơn hàng</h5>
                </div>
                <div class="card-body">
                    <canvas id="orderStatusChart" height="250"></canvas>
                    <div class="mt-3">
                        <% orderStatusStats.forEach(stat => { %>
                        <div class="d-flex justify-content-between align-items-center mb-1">
                            <span class="text-muted"><%= stat._id %></span>
                            <span class="badge bg-primary"><%= stat.count %> đơn</span>
                        </div>
                        <% }) %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Shops và Services -->
    <div class="row mb-4">
        <!-- Top Shops -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Top 5 Shop doanh thu cao nhất</h5>
                </div>
                <div class="card-body">
                    <canvas id="shopChart" height="250"></canvas>
                </div>
                <div class="card-footer bg-light">
                    <div class="table-responsive">
                        <table class="table table-sm table-hover">
                            <thead>
                                <tr>
                                    <th>Shop</th>
                                    <th>Doanh thu</th>
                                    <th>Số đơn</th>
                                    <th>TB/Đơn</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% topShops.forEach(shop => { %>
                                <tr>
                                    <td><%= shop.shopName %></td>
                                    <td><%= shop.totalRevenue.toLocaleString() %>₫</td>
                                    <td><%= shop.orderCount %></td>
                                    <td><%= Math.round(shop.averageOrder).toLocaleString() %>₫</td>
                                </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Top Services -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Top 5 Dịch vụ được thuê nhiều nhất</h5>
                </div>
                <div class="card-body">
                    <canvas id="serviceChart" height="250"></canvas>
                </div>
                <div class="card-footer bg-light">
                    <div class="table-responsive">
                        <table class="table table-sm table-hover">
                            <thead>
                                <tr>
                                    <th>Dịch vụ</th>
                                    <th>Số lượt thuê</th>
                                    <th>Doanh thu</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% topServices.forEach(service => { %>
                                <tr>
                                    <td><%= service.serviceName %></td>
                                    <td><%= service.totalQuantity %></td>
                                    <td><%= service.totalRevenue.toLocaleString() %>₫</td>
                                </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Thống kê người dùng -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-users me-2"></i>Phân bố người dùng theo vai trò
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <canvas id="userRolesChart" height="200"></canvas>
                        </div>
                        <div class="col-md-6">
                            <div class="role-stats mt-4">
                                <% 
                                const roleColors = {
                                    'customer': '#4bc0c0',
                                    'shop': '#ff6384',
                                    'admin': '#ffcd56'
                                };
                                userMetrics.roleDistribution.forEach(role => { 
                                    const percentage = (role.count / userMetrics.totalUsers * 100).toFixed(1);
                                    const color = roleColors[role._id] || '#36a2eb';
                                %>
                                <div class="role-item mb-3">
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <span class="role-name text-capitalize">
                                            <i class="fas fa-circle me-2" style="color: <%= color %>"></i>
                                            <%= role._id %>
                                        </span>
                                        <span class="role-count fw-bold">
                                            <%= role.count %> người dùng
                                        </span>
                                    </div>
                                    <div class="progress" style="height: 8px;">
                                        <div class="progress-bar" role="progressbar" 
                                             style="width: <%= percentage %>%; background-color: <%= color %>;" 
                                             aria-valuenow="<%= percentage %>" 
                                             aria-valuemin="0" 
                                             aria-valuemax="100">
                                        </div>
                                    </div>
                                    <div class="text-end mt-1">
                                        <small class="text-muted"><%= percentage %>%</small>
                                    </div>
                                </div>
                                <% }) %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart Data -->
<script type="application/json" id="chartData">
<%- JSON.stringify({
  revenue: revenueChartData,
  orderStatus: orderStatusStats,
  topShops: topShops,
  topServices: topServices,
  userRoles: userMetrics.roleDistribution
}) %>
</script>

<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Chart Initialization -->
<script>
const chartData = JSON.parse(document.getElementById('chartData').textContent);
// Format số tiền VND
const formatVND = (value) => new Intl.NumberFormat('vi-VN', {
    style: 'currency',
    currency: 'VND'
}).format(value);

// Biểu đồ doanh thu
const revenueChart = new Chart(document.getElementById('revenueChart'), {
    type: 'line',
    data: {
        labels: chartData.revenue.labels,
        datasets: [{
            label: 'Doanh thu',
            data: chartData.revenue.data,
            borderColor: 'rgb(75, 192, 192)',
            backgroundColor: 'rgba(75, 192, 192, 0.1)',
            yAxisID: 'y'
        }, {
            label: 'Số đơn hàng',
            data: chartData.revenue.orderCounts,
            borderColor: 'rgb(255, 99, 132)',
            backgroundColor: 'rgba(255, 99, 132, 0.1)',
            yAxisID: 'y1'
        }]
    },
    options: {
        responsive: true,
        interaction: {
            mode: 'index',
            intersect: false
        },
        scales: {
            y: {
                type: 'linear',
                display: true,
                position: 'left',
                ticks: {
                    callback: value => formatVND(value)
                }
            },
            y1: {
                type: 'linear',
                display: true,
                position: 'right',
                grid: {
                    drawOnChartArea: false
                }
            }
        }
    }
});

// Biểu đồ trạng thái đơn hàng
const orderStatusChart = new Chart(document.getElementById('orderStatusChart'), {
    type: 'doughnut',
    data: {
        labels: chartData.orderStatus.map(s => s._id),
        datasets: [{
            data: chartData.orderStatus.map(s => s.count),
            backgroundColor: [
                'rgb(75, 192, 192)',
                'rgb(255, 99, 132)',
                'rgb(255, 205, 86)',
                'rgb(54, 162, 235)'
            ]
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'bottom'
            }
        }
    }
});

// Biểu đồ top shops
const shopChart = new Chart(document.getElementById('shopChart'), {
    type: 'bar',
    data: {
        labels: chartData.topShops.map(s => s.shopName),
        datasets: [{
            label: 'Doanh thu',
            data: chartData.topShops.map(s => s.totalRevenue),
            backgroundColor: 'rgba(54, 162, 235, 0.5)',
            borderColor: 'rgb(54, 162, 235)',
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true,
                ticks: {
                    callback: value => formatVND(value)
                }
            }
        }
    }
});

// Biểu đồ top dịch vụ
const serviceChart = new Chart(document.getElementById('serviceChart'), {
    type: 'pie',
    data: {
        labels: chartData.topServices.map(s => s.serviceName),
        datasets: [{
            data: chartData.topServices.map(s => s.totalQuantity),
            backgroundColor: [
                'rgb(255, 99, 132)',
                'rgb(54, 162, 235)', 
                'rgb(255, 205, 86)',
                'rgb(75, 192, 192)',
                'rgb(153, 102, 255)'
            ]
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'right'
            }
        }
    }
});

// Biểu đồ phân bố người dùng
const userRolesChart = new Chart(document.getElementById('userRolesChart'), {
    type: 'pie',
    data: {
        labels: chartData.userRoles.map(r => r._id),
        datasets: [{
            data: chartData.userRoles.map(r => r.count),
            backgroundColor: [
                'rgb(75, 192, 192)',
                'rgb(255, 99, 132)',
                'rgb(255, 205, 86)'
            ]
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'right'
            }
        }
    }
});

// Toggle hiển thị doanh thu/đơn hàng
document.getElementById('viewRevenue').addEventListener('click', () => {
    revenueChart.data.datasets[1].hidden = true;
    revenueChart.data.datasets[0].hidden = false;
    revenueChart.update();
});

document.getElementById('viewOrders').addEventListener('click', () => {
    revenueChart.data.datasets[0].hidden = true;
    revenueChart.data.datasets[1].hidden = false;
    revenueChart.update();
});
</script>
</script>