const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('../models/User');
const Service = require('../models/Service');
const Category = require('../models/Category');

// K·∫øt n·ªëi database
mongoose.connect('mongodb://localhost:27017/planora', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

async function seedData() {
  try {
    console.log('üå± B·∫Øt ƒë·∫ßu t·∫°o d·ªØ li·ªáu m·∫´u...');

    // T·∫°o admin user
    const adminUser = new User({
      username: 'admin',
      email: 'admin@planora.com',
      password: 'admin123',
      fullName: 'Administrator',
      phone: '0123456789',
      address: '123 Admin Street, Ho Chi Minh City',
      role: 'admin',
      isActive: true
    });
    await adminUser.save();
    console.log('‚úÖ ƒê√£ t·∫°o admin user');

    // T·∫°o customer users
    const customers = [
      {
        username: 'customer1',
        email: 'customer1@example.com',
        password: 'customer123',
        fullName: 'Nguy·ªÖn VƒÉn A',
        phone: '0987654321',
        address: '456 Customer Street, Hanoi',
        role: 'customer'
      },
      {
        username: 'customer2',
        email: 'customer2@example.com',
        password: 'customer123',
        fullName: 'Tr·∫ßn Th·ªã B',
        phone: '0912345678',
        address: '789 Customer Street, Da Nang',
        role: 'customer'
      }
    ];

    const createdCustomers = [];
    for (const customerData of customers) {
      const customer = new User(customerData);
      await customer.save();
      createdCustomers.push(customer);
    }
    console.log('‚úÖ ƒê√£ t·∫°o customer users');

    // T·∫°o shop owner
    const shopOwner = new User({
      username: 'shopowner1',
      email: 'shopowner1@example.com',
      password: 'shop123',
      fullName: 'L√™ VƒÉn C',
      phone: '0901234567',
      address: '321 Shop Street, Ho Chi Minh City',
      role: 'shop',
      shopName: 'Event Pro Shop',
      shopAddress: '123 Event Street, District 1, Ho Chi Minh City',
      shopPhone: '0901234567',
      shopEmail: 'shopowner1@example.com'
    });
    await shopOwner.save();
    console.log('‚úÖ ƒê√£ t·∫°o shop owner');

    // T·∫°o danh m·ª•c (Category)
    const categoryNames = ['sound', 'lighting', 'furniture', 'decoration', 'photography', 'videography', 'entertainment', 'mc'];
    const existingCategories = await Category.find({ name: { $in: categoryNames } });
    const categoriesMap = {};

    for (const name of categoryNames) {
      let cat = existingCategories.find(c => c.name === name);
      if (!cat) {
        cat = new Category({ name, description: `${name} services` });
        await cat.save();
      }
      categoriesMap[name] = cat;
    }

    // T·∫°o services (t∆∞∆°ng th√≠ch v·ªõi schema Service)
    const services = [
      {
        shop: shopOwner._id,
        title: 'H·ªá th·ªëng √¢m thanh chuy√™n nghi·ªáp',
        description: 'H·ªá th·ªëng √¢m thanh ch·∫•t l∆∞·ª£ng cao cho s·ª± ki·ªán l·ªõn, bao g·ªìm loa, micro, mixer v√† c√°c thi·∫øt b·ªã h·ªó tr·ª£.',
        category: categoriesMap['sound']._id,
        price: 500000,
        address: shopOwner.shopAddress || '123 Event Street, HCMC',
    status: 'active',
  images: ['/uploads/default-service.svg'],
  video: ''
      },
      {
        shop: shopOwner._id,
        title: 'H·ªá th·ªëng √°nh s√°ng LED',
        description: 'H·ªá th·ªëng √°nh s√°ng LED hi·ªán ƒë·∫°i, t·∫°o hi·ªáu ·ª©ng ƒë·∫πp m·∫Øt cho s·ª± ki·ªán.',
        category: categoriesMap['lighting']._id,
        price: 300000,
        address: shopOwner.shopAddress || '123 Event Street, HCMC',
    status: 'active',
  images: ['/uploads/default-service.svg'],
  video: ''
      },
      {
        shop: shopOwner._id,
        title: 'B√†n gh·∫ø ti·ªác cao c·∫•p',
        description: 'B·ªô b√†n gh·∫ø ti·ªác cao c·∫•p, ph√π h·ª£p cho ti·ªác c∆∞·ªõi, h·ªôi ngh·ªã.',
        category: categoriesMap['furniture']._id,
        price: 50000,
        address: shopOwner.shopAddress || '123 Event Street, HCMC',
    status: 'active',
  images: ['/uploads/default-service.svg'],
  video: ''
      },
      {
        shop: shopOwner._id,
        title: 'MC chuy√™n nghi·ªáp',
        description: 'MC c√≥ kinh nghi·ªám, d·∫´n ch∆∞∆°ng tr√¨nh s·ª± ki·ªán m·ªôt c√°ch chuy√™n nghi·ªáp.',
        category: categoriesMap['mc']._id,
        price: 2000000,
        address: shopOwner.shopAddress || '123 Event Street, HCMC',
    status: 'active',
  images: ['/uploads/default-service.svg'],
  video: ''
      }
    ];

    for (const serviceData of services) {
      const service = new Service(serviceData);
      await service.save();
    }
    console.log('‚úÖ ƒê√£ t·∫°o services');

    console.log('üéâ Ho√†n th√†nh t·∫°o d·ªØ li·ªáu m·∫´u!');
    console.log('\nüìã Th√¥ng tin ƒëƒÉng nh·∫≠p:');
    console.log('Admin: admin@planora.com / admin123');
    console.log('Customer: customer1@example.com / customer123');
    console.log('Shop Owner: shopowner1@example.com / shop123');

  } catch (error) {
    console.error('‚ùå L·ªói khi t·∫°o d·ªØ li·ªáu m·∫´u:', error);
  } finally {
    mongoose.connection.close();
  }
}

seedData();
