const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('../models/User');
const Shop = require('../models/Shop');
const Service = require('../models/Service');

// K·∫øt n·ªëi database
mongoose.connect('mongodb://localhost:27017/planora', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

async function seedData() {
  try {
    console.log('üå± B·∫Øt ƒë·∫ßu t·∫°o d·ªØ li·ªáu m·∫´u...');

    // T·∫°o admin user
    const adminUser = new User({
      username: 'admin',
      email: 'admin@planora.com',
      password: 'admin123',
      fullName: 'Administrator',
      phone: '0123456789',
      address: '123 Admin Street, Ho Chi Minh City',
      role: 'admin',
      isActive: true
    });
    await adminUser.save();
    console.log('‚úÖ ƒê√£ t·∫°o admin user');

    // T·∫°o customer users
    const customers = [
      {
        username: 'customer1',
        email: 'customer1@example.com',
        password: 'customer123',
        fullName: 'Nguy·ªÖn VƒÉn A',
        phone: '0987654321',
        address: '456 Customer Street, Hanoi',
        role: 'customer'
      },
      {
        username: 'customer2',
        email: 'customer2@example.com',
        password: 'customer123',
        fullName: 'Tr·∫ßn Th·ªã B',
        phone: '0912345678',
        address: '789 Customer Street, Da Nang',
        role: 'customer'
      }
    ];

    const createdCustomers = [];
    for (const customerData of customers) {
      const customer = new User(customerData);
      await customer.save();
      createdCustomers.push(customer);
    }
    console.log('‚úÖ ƒê√£ t·∫°o customer users');

    // T·∫°o shop owner
    const shopOwner = new User({
      username: 'shopowner1',
      email: 'shopowner1@example.com',
      password: 'shop123',
      fullName: 'L√™ VƒÉn C',
      phone: '0901234567',
      address: '321 Shop Street, Ho Chi Minh City',
      role: 'shop'
    });
    await shopOwner.save();
    console.log('‚úÖ ƒê√£ t·∫°o shop owner');

    // T·∫°o shop
    const shop = new Shop({
      owner: shopOwner._id,
      shopName: 'Event Pro Shop',
      description: 'Chuy√™n cung c·∫•p d·ªãch v·ª• s·ª± ki·ªán chuy√™n nghi·ªáp',
      address: '123 Event Street, District 1, Ho Chi Minh City',
      phone: '0901234567',
      email: 'shopowner1@example.com',
      businessLicense: 'BL123456789',
      status: 'approved',
      rating: 4.5,
      totalReviews: 25,
      location: {
        type: 'Point',
        coordinates: [106.6297, 10.8231] // Ho Chi Minh City coordinates
      }
    });
    await shop.save();
    console.log('‚úÖ ƒê√£ t·∫°o shop');

    // T·∫°o services
    const services = [
      {
        shop: shop._id,
        name: 'H·ªá th·ªëng √¢m thanh chuy√™n nghi·ªáp',
        description: 'H·ªá th·ªëng √¢m thanh ch·∫•t l∆∞·ª£ng cao cho s·ª± ki·ªán l·ªõn, bao g·ªìm loa, micro, mixer v√† c√°c thi·∫øt b·ªã h·ªó tr·ª£.',
        category: 'sound',
        price: 500000,
        unit: 'event',
        rating: 4.8,
        totalReviews: 15,
        features: ['Loa JBL chuy√™n nghi·ªáp', 'Micro kh√¥ng d√¢y', 'Mixer 16 k√™nh', 'K·ªπ thu·∫≠t vi√™n h·ªó tr·ª£'],
        capacity: 500,
        location: {
          type: 'Point',
          coordinates: [106.6297, 10.8231]
        }
      },
      {
        shop: shop._id,
        name: 'H·ªá th·ªëng √°nh s√°ng LED',
        description: 'H·ªá th·ªëng √°nh s√°ng LED hi·ªán ƒë·∫°i, t·∫°o hi·ªáu ·ª©ng ƒë·∫πp m·∫Øt cho s·ª± ki·ªán.',
        category: 'lighting',
        price: 300000,
        unit: 'event',
        rating: 4.6,
        totalReviews: 12,
        features: ['LED Par 64', 'Moving Head', 'Laser show', 'K·ªπ thu·∫≠t vi√™n √°nh s√°ng'],
        capacity: 300,
        location: {
          type: 'Point',
          coordinates: [106.6297, 10.8231]
        }
      },
      {
        shop: shop._id,
        name: 'B√†n gh·∫ø ti·ªác cao c·∫•p',
        description: 'B·ªô b√†n gh·∫ø ti·ªác cao c·∫•p, ph√π h·ª£p cho ti·ªác c∆∞·ªõi, h·ªôi ngh·ªã.',
        category: 'furniture',
        price: 50000,
        unit: 'set',
        rating: 4.4,
        totalReviews: 8,
        features: ['B√†n tr√≤n 10 ng∆∞·ªùi', 'Gh·∫ø b·ªçc v·∫£i cao c·∫•p', 'KhƒÉn tr·∫£i b√†n', 'Giao h√†ng mi·ªÖn ph√≠'],
        capacity: 100,
        location: {
          type: 'Point',
          coordinates: [106.6297, 10.8231]
        }
      },
      {
        shop: shop._id,
        name: 'MC chuy√™n nghi·ªáp',
        description: 'MC c√≥ kinh nghi·ªám, d·∫´n ch∆∞∆°ng tr√¨nh s·ª± ki·ªán m·ªôt c√°ch chuy√™n nghi·ªáp.',
        category: 'mc',
        price: 2000000,
        unit: 'event',
        rating: 4.9,
        totalReviews: 20,
        features: ['Kinh nghi·ªám 5+ nƒÉm', 'Gi·ªçng n√≥i hay', 'T∆∞∆°ng t√°c t·ªët', 'Linh ho·∫°t'],
        capacity: 1,
        location: {
          type: 'Point',
          coordinates: [106.6297, 10.8231]
        }
      }
    ];

    for (const serviceData of services) {
      const service = new Service(serviceData);
      await service.save();
    }
    console.log('‚úÖ ƒê√£ t·∫°o services');

    console.log('üéâ Ho√†n th√†nh t·∫°o d·ªØ li·ªáu m·∫´u!');
    console.log('\nüìã Th√¥ng tin ƒëƒÉng nh·∫≠p:');
    console.log('Admin: admin@planora.com / admin123');
    console.log('Customer: customer1@example.com / customer123');
    console.log('Shop Owner: shopowner1@example.com / shop123');

  } catch (error) {
    console.error('‚ùå L·ªói khi t·∫°o d·ªØ li·ªáu m·∫´u:', error);
  } finally {
    mongoose.connection.close();
  }
}

seedData();
